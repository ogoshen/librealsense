# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        ref: web-dev
    
    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.

#    - name: Setup Emscripten
#      uses: lovasoa/setup-emscripten@v1

    - name: Cache emsdk
      uses: actions/cache@v4
      id: cache # This is important!
      with:
        # Set to the same folder as actions-cache-folder (more below)
        path: 'emsdk-cache'
        # Set the end bit to emsdk version
        key: ${{ runner.os }}-emsdk-1.38.40

    - name: Setup emsdk (use cache if found, create otherwise)
      uses: mymindstorm/setup-emsdk@v2
      with:
        # Make sure to set a version number!
        version: 1.38.40
        # This is the name of the cache folder.
        # The cache folder will be placed in the build directory,
        #  so make sure it doesn't conflict with anything!
        actions-cache-folder: 'emsdk-cache'
        # This stops it from using tc.cacheDir since we are using
        #  actions/cache.
        no-cache: true

    - name: Verify
      run: emcc -v
      
    - name: run-cmake
      uses: lukka/run-cmake@v2.3
      with:
        cmakeGenerator: 'Ninja'  
        buildWithCMakeArgs: '-- -v'
        cmakeToolchainPath: "${env.EMSCRIPTEN_ROOT}/cmake/Modules/Platform/Emscripten.cmake"
